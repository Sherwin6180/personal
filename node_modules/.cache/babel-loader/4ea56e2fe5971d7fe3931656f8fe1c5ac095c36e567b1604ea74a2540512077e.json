{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sherw\\\\OneDrive\\\\Documents\\\\Idea\\\\personal\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport OpenAI from \"openai\";\nimport experienceData from './experienceData';\nimport projectData from './projectData';\nimport othersData from './othersData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst lambdaFunctionUrl = \"https://tfbizhegfpts6trc6btnrcyo7q0fppsm.lambda-url.us-east-2.on.aws/\"; // Lambda Function URL\n\nconst highlightColor = 'rgb(176, 221, 133)';\n\n// Keyframes for the float-up animation\nconst floatUp = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(100px);  // Start from below\n  }\n  50% {\n    opacity: 0.5;\n    transform: translateY(-10px);  // Slight bob above the final position\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);  // Settle at the final position\n  }\n`;\nconst ChatWindowWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n  background-color: rgba(0, 0, 0, 0.5); // Optional: adds a backdrop effect\n`;\n_c = ChatWindowWrapper;\nconst ChatWindowContainer = styled.div`\n  width: 400px;\n  height: 500px;\n  background-color: #1e1e1e;\n  border: 3px solid rgb(176, 221, 133);\n  border-radius: 15px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);\n  backdrop-filter: blur(8px);\n  animation: ${floatUp} 0.8s ease-out;\n`;\n_c2 = ChatWindowContainer;\nconst ChatHeader = styled.div`\n  background-color: ${highlightColor};\n  color: #000;\n  padding: 15px;\n  font-weight: bold;\n  border-radius: 12px 12px 0 0;\n  text-align: center;\n  font-size: 1.2em;\n`;\n_c3 = ChatHeader;\nconst ChatBody = styled.div`\n  padding: 15px;\n  height: 350px;\n  overflow-y: auto;\n  color: #ddd;\n  font-size: 0.95em;\n`;\n_c4 = ChatBody;\nconst ChatInputContainer = styled.div`\n  padding: 15px;\n  border-top: 1px solid #333;\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n_c5 = ChatInputContainer;\nconst ChatInput = styled.input`\n  flex-grow: 1;\n  padding: 12px;\n  border-radius: 10px;\n  border: none;\n  background-color: #333;\n  color: #ddd;\n  font-size: 1em;\n  outline: none;\n\n  &:focus {\n    box-shadow: 0 0 5px ${highlightColor};\n  }\n`;\n_c6 = ChatInput;\nconst SendButton = styled.button`\n  background-color: ${highlightColor};\n  color: #000;\n  padding: 12px;\n  border: none;\n  border-radius: 10px;\n  cursor: pointer;\n  font-weight: bold;\n  font-size: 1em;\n  transition: background-color 0.3s ease, transform 0.2s;\n\n  &:hover {\n    background-color: #a6e37b;\n    transform: scale(1.05);\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n`;\n_c7 = SendButton;\nconst ChatMessage = styled.div`\n  margin-bottom: 10px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\nconst UserMessage = styled(ChatMessage)`\n  text-align: right;\n  color: ${highlightColor};\n`;\n_c8 = UserMessage;\nconst BotMessage = styled(ChatMessage)`\n  text-align: left;\n  color: #ddd;\n`;\n_c9 = BotMessage;\nfunction ChatWindow({\n  isVisible,\n  onClose\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [apiKey, setApiKey] = useState(null);\n  useEffect(() => {\n    // 从 Lambda 获取 API 密钥\n    const fetchApiKey = async () => {\n      try {\n        const response = await fetch(lambdaFunctionUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const data = await response.json();\n        setApiKey(data.apiKey);\n      } catch (error) {\n        console.error(\"Error fetching API key:\", error);\n      }\n    };\n    fetchApiKey();\n  }, []);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      user: true,\n      text: input\n    }];\n    setMessages(newMessages);\n    setInput('');\n    if (!apiKey) {\n      setMessages([...newMessages, {\n        user: false,\n        text: \"API key is not available yet.\"\n      }]);\n      return;\n    }\n    try {\n      const openai = new OpenAI({\n        apiKey,\n        dangerouslyAllowBrowser: true\n      });\n      const context = `\n        Xinyu Liang is a senior at Georgia Tech in the BSMS Computer Science program.\n        He has interests in AI, networking, systems, and web development. \n        He is passionate about innovation and optimization. Outside of work, he enjoys reading, music, building tools, and working out.\n\n        Experience:\n        ${experienceData.map(exp => `${exp.role} at ${exp.company}, ${exp.location} (${exp.time}): ${exp.bullets.join(', ')}`).join('\\n')}\n        \n        Projects:\n        ${projectData.map(proj => `${proj.name}: ${proj.bullets.join(', ')}`).join('\\n')}\n        \n        Other:\n        ${othersData.map(oth => `${oth.title}: ${oth.skills ? Object.entries(oth.skills).map(([key, value]) => `${key}: ${value.join(', ')}`).join('; ') : ''} ${oth.courses ? oth.courses.join(', ') : ''}`).join('\\n')}\n      `;\n      const completion = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"system\",\n          content: context\n        }, {\n          role: \"user\",\n          content: input\n        }]\n      });\n      const botMessage = completion.choices[0].message.content.trim();\n      setMessages([...newMessages, {\n        user: false,\n        text: botMessage\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      setMessages([...newMessages, {\n        user: false,\n        text: \"Sorry, something went wrong.\"\n      }]);\n    }\n  };\n  if (!isVisible) return null; // Don't render anything if not visible\n\n  return /*#__PURE__*/_jsxDEV(ChatWindowWrapper, {\n    children: /*#__PURE__*/_jsxDEV(ChatWindowContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [\"Chat with Xinyu's Agent\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          style: {\n            float: 'right',\n            color: '#000',\n            background: 'none',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBody, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: msg.user ? /*#__PURE__*/_jsxDEV(UserMessage, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(BotMessage, {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 67\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(ChatInput, {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && sendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"0V9k10uvfQC3kK7DZ8gQWeCkIz8=\");\n_c10 = ChatWindow;\nexport default ChatWindow;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"ChatWindowWrapper\");\n$RefreshReg$(_c2, \"ChatWindowContainer\");\n$RefreshReg$(_c3, \"ChatHeader\");\n$RefreshReg$(_c4, \"ChatBody\");\n$RefreshReg$(_c5, \"ChatInputContainer\");\n$RefreshReg$(_c6, \"ChatInput\");\n$RefreshReg$(_c7, \"SendButton\");\n$RefreshReg$(_c8, \"UserMessage\");\n$RefreshReg$(_c9, \"BotMessage\");\n$RefreshReg$(_c10, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","styled","keyframes","OpenAI","experienceData","projectData","othersData","jsxDEV","_jsxDEV","lambdaFunctionUrl","highlightColor","floatUp","ChatWindowWrapper","div","_c","ChatWindowContainer","_c2","ChatHeader","_c3","ChatBody","_c4","ChatInputContainer","_c5","ChatInput","input","_c6","SendButton","button","_c7","ChatMessage","UserMessage","_c8","BotMessage","_c9","ChatWindow","isVisible","onClose","_s","messages","setMessages","setInput","apiKey","setApiKey","fetchApiKey","response","fetch","method","headers","data","json","error","console","sendMessage","trim","newMessages","user","text","openai","dangerouslyAllowBrowser","context","map","exp","role","company","location","time","bullets","join","proj","name","oth","title","skills","Object","entries","key","value","courses","completion","chat","completions","create","model","content","botMessage","choices","message","children","onClick","style","float","color","background","border","cursor","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","Fragment","onChange","e","target","onKeyPress","_c10","$RefreshReg$"],"sources":["C:/Users/sherw/OneDrive/Documents/Idea/personal/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport OpenAI from \"openai\";\r\n\r\nimport experienceData from './experienceData';\r\nimport projectData from './projectData';\r\nimport othersData from './othersData';\r\n\r\nconst lambdaFunctionUrl = \"https://tfbizhegfpts6trc6btnrcyo7q0fppsm.lambda-url.us-east-2.on.aws/\"; // Lambda Function URL\r\n\r\nconst highlightColor = 'rgb(176, 221, 133)';\r\n\r\n// Keyframes for the float-up animation\r\nconst floatUp = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateY(100px);  // Start from below\r\n  }\r\n  50% {\r\n    opacity: 0.5;\r\n    transform: translateY(-10px);  // Slight bob above the final position\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n    transform: translateY(0);  // Settle at the final position\r\n  }\r\n`;\r\n\r\nconst ChatWindowWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  background-color: rgba(0, 0, 0, 0.5); // Optional: adds a backdrop effect\r\n`;\r\n\r\nconst ChatWindowContainer = styled.div`\r\n  width: 400px;\r\n  height: 500px;\r\n  background-color: #1e1e1e;\r\n  border: 3px solid rgb(176, 221, 133);\r\n  border-radius: 15px;\r\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);\r\n  backdrop-filter: blur(8px);\r\n  animation: ${floatUp} 0.8s ease-out;\r\n`;\r\n\r\nconst ChatHeader = styled.div`\r\n  background-color: ${highlightColor};\r\n  color: #000;\r\n  padding: 15px;\r\n  font-weight: bold;\r\n  border-radius: 12px 12px 0 0;\r\n  text-align: center;\r\n  font-size: 1.2em;\r\n`;\r\n\r\nconst ChatBody = styled.div`\r\n  padding: 15px;\r\n  height: 350px;\r\n  overflow-y: auto;\r\n  color: #ddd;\r\n  font-size: 0.95em;\r\n`;\r\n\r\nconst ChatInputContainer = styled.div`\r\n  padding: 15px;\r\n  border-top: 1px solid #333;\r\n  display: flex;\r\n  gap: 10px;\r\n  align-items: center;\r\n`;\r\n\r\nconst ChatInput = styled.input`\r\n  flex-grow: 1;\r\n  padding: 12px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  background-color: #333;\r\n  color: #ddd;\r\n  font-size: 1em;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    box-shadow: 0 0 5px ${highlightColor};\r\n  }\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n  background-color: ${highlightColor};\r\n  color: #000;\r\n  padding: 12px;\r\n  border: none;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 1em;\r\n  transition: background-color 0.3s ease, transform 0.2s;\r\n\r\n  &:hover {\r\n    background-color: #a6e37b;\r\n    transform: scale(1.05);\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n\r\nconst ChatMessage = styled.div`\r\n  margin-bottom: 10px;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst UserMessage = styled(ChatMessage)`\r\n  text-align: right;\r\n  color: ${highlightColor};\r\n`;\r\n\r\nconst BotMessage = styled(ChatMessage)`\r\n  text-align: left;\r\n  color: #ddd;\r\n`;\r\n\r\nfunction ChatWindow({ isVisible, onClose }) {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [apiKey, setApiKey] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 从 Lambda 获取 API 密钥\r\n    const fetchApiKey = async () => {\r\n      try {\r\n        const response = await fetch(lambdaFunctionUrl, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        setApiKey(data.apiKey);\r\n      } catch (error) {\r\n        console.error(\"Error fetching API key:\", error);\r\n      }\r\n    };\r\n\r\n    fetchApiKey();\r\n  }, []);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessages = [...messages, { user: true, text: input }];\r\n    setMessages(newMessages);\r\n    setInput('');\r\n\r\n    if (!apiKey) {\r\n      setMessages([...newMessages, { user: false, text: \"API key is not available yet.\" }]);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const openai = new OpenAI({ apiKey, dangerouslyAllowBrowser: true });\r\n\r\n      const context = `\r\n        Xinyu Liang is a senior at Georgia Tech in the BSMS Computer Science program.\r\n        He has interests in AI, networking, systems, and web development. \r\n        He is passionate about innovation and optimization. Outside of work, he enjoys reading, music, building tools, and working out.\r\n\r\n        Experience:\r\n        ${experienceData.map(exp => `${exp.role} at ${exp.company}, ${exp.location} (${exp.time}): ${exp.bullets.join(', ')}`).join('\\n')}\r\n        \r\n        Projects:\r\n        ${projectData.map(proj => `${proj.name}: ${proj.bullets.join(', ')}`).join('\\n')}\r\n        \r\n        Other:\r\n        ${othersData.map(oth => `${oth.title}: ${oth.skills ? Object.entries(oth.skills).map(([key, value]) => `${key}: ${value.join(', ')}`).join('; ') : ''} ${oth.courses ? oth.courses.join(', ') : ''}`).join('\\n')}\r\n      `;\r\n\r\n      const completion = await openai.chat.completions.create({\r\n        model: \"gpt-3.5-turbo\",\r\n        model: \"gpt-3.5-turbo\",\r\n        messages: [\r\n          { role: \"system\", content: context },\r\n          { role: \"user\", content: input },\r\n        ],\r\n      });\r\n\r\n      const botMessage = completion.choices[0].message.content.trim();\r\n      setMessages([...newMessages, { user: false, text: botMessage }]);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages([...newMessages, { user: false, text: \"Sorry, something went wrong.\" }]);\r\n    }\r\n  };\r\n\r\n  if (!isVisible) return null;  // Don't render anything if not visible\r\n\r\n  return (\r\n    <ChatWindowWrapper>\r\n      <ChatWindowContainer>\r\n        <ChatHeader>\r\n          Chat with Xinyu's Agent\r\n          <button onClick={onClose} style={{ float: 'right', color: '#000', background: 'none', border: 'none', cursor: 'pointer' }}>X</button>\r\n        </ChatHeader>\r\n        <ChatBody>\r\n          {messages.map((msg, index) => (\r\n            <React.Fragment key={index}>\r\n              {msg.user ? <UserMessage>{msg.text}</UserMessage> : <BotMessage>{msg.text}</BotMessage>}\r\n            </React.Fragment>\r\n          ))}\r\n        </ChatBody>\r\n        <ChatInputContainer>\r\n          <ChatInput\r\n            value={input}\r\n            onChange={e => setInput(e.target.value)}\r\n            onKeyPress={e => e.key === 'Enter' && sendMessage()}\r\n          />\r\n          <SendButton onClick={sendMessage}>Send</SendButton>\r\n        </ChatInputContainer>\r\n      </ChatWindowContainer>\r\n    </ChatWindowWrapper>\r\n  );\r\n}\r\n  \r\nexport default ChatWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}